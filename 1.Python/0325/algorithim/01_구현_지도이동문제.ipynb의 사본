{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1UmAu64WlGAsJXHQMYZ9K-XGc8qky5eGD","timestamp":1711349867094}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"w-CMFUNOXrzt"},"outputs":[],"source":["# 주제 : 구현\n","# ---> 주어진 문제들을 코드로 작성하는 것들이 다 구현!!!!\n","#      (특별한 알고리즘을 적용하지 않는 유형들을 보통 구현!! )\n","#      (넓은 범위로 보면,,,모든 문제들이 다 구현이기는 함 ...)\n","# ---> 특정 유형은 잘 없어요,,,그냥 주어진 대로 문제 분석하면서 진행!!!!\n","# ---> 유형 중 하나는 평면상 이동 : 여러 응용도 가능, 탐색/최단거리에도 사용"]},{"cell_type":"code","source":[],"metadata":{"id":"qyRQv3kVYMHv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 일단 시작을 하기 위해서 주어진 샘플 케이스에서...\n","# --> 입력 부분이 이렇게 초기화 되었다고 가정하고,,,,\n","n = 5\n","plans = [\"R\",\"R\",\"R\",\"U\",\"D\",\"D\"] # \"R R R U D D\" --> 리스트로 변경!!!"],"metadata":{"id":"0VMce0lzYMOA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# \"R R R U D D\".split(\" \")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0y3Y__8CYMRd","executionInfo":{"status":"ok","timestamp":1711349578854,"user_tz":-540,"elapsed":256,"user":{"displayName":"Minkyu Kwon","userId":"08202342554901369599"}},"outputId":"cb5b37a7-c3c3-4b28-9f69-d7a2b0c8fb5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['R', 'R', 'R', 'U', 'D', 'D']"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# 세팅 : 움직임에 대한 좌표화\n","# ---> 임의의 위치 (x,y)에 있을 때..\n","# L : (x, y-1)\n","# R : (x, y+1)\n","# U : (x-1, y)\n","# D : (x+1, y)\n","# ===> 증감을 기준으로 표현을 함!!!!\n","# (x, y) --> L (x,y) + (0,-1) = (x+0, y-1)\n","# (x, y) --> R (x,y) + (0 +1) = (x+0, y+1)\n","# (x, y) --> U (x,y) + (-1 0) = (x-1, y+0)\n","# (x, y) --> D (x,y) + (+1 0) = (x+1, y+0)\n","# 개인적인 선호 : L은 어떻게 , R은 어떻게, ...U는 어떻게...\n","# ==> dict 같은 쌍의 형식을 사용하는 자료형으로 구현하면 어떨까?\n","# + 코테에서는 dict를 주로 잘 쓰려고 하는 경향!"],"metadata":{"id":"4FEr8LcFYue5","executionInfo":{"status":"ok","timestamp":1711350099652,"user_tz":-540,"elapsed":5,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["# 이동에 대한 dict 자료형으로 코드화!!!\n","\n","move_dict ={\n","    \"L\" : [0, -1],\n","    \"R\" : [0, 1],\n","    \"U\" : [-1,0],\n","    \"D\" : [1,0],\n","}\n"],"metadata":{"id":"YVHDMI-TYuhq","executionInfo":{"status":"ok","timestamp":1711350252352,"user_tz":-540,"elapsed":317,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["move_dict[\"L\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YMxFWbCXbIx2","executionInfo":{"status":"ok","timestamp":1711350256775,"user_tz":-540,"elapsed":3,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"8c349f87-5012-4df7-b688-fe479ae5ab43"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, -1]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# L 이동에 대한 x,y의 변동 사항은?\n","print(move_dict[\"L\"][0])\n","print(move_dict[\"L\"][1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DDdktIHAa6Fl","executionInfo":{"status":"ok","timestamp":1711350271996,"user_tz":-540,"elapsed":285,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"bf634cee-88ec-4d9c-c475-0d8827e0511f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","-1\n"]}]},{"cell_type":"code","source":["# 예) 지금 (3,4)에 있는데, L 로 이동하라고 하면 어디로 갈까? (in,out 생략)\n","\n","( 3 + move_dict[\"L\"[0]], 3 + move_dict[\"L\"[1]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":180},"id":"M8oizhetbKLh","executionInfo":{"status":"error","timestamp":1711350371070,"user_tz":-540,"elapsed":346,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"0eaab944-b720-491f-d99e-c27adc36efff"},"execution_count":7,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"unsupported operand type(s) for +: 'int' and 'list'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-66836c3a82b4>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 예) 지금 (3,4)에 있는데, L 로 이동하라고 하면 어디로 갈까? (in,out 생략)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;34m(\u001b[0m \u001b[0;36m3\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mmove_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"L\"\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mmove_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"L\"\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for +: 'int' and 'list'"]}]},{"cell_type":"markdown","source":["continue 다음번쨰로\n","break 멈춰버리는 역할\n"],"metadata":{"id":"i4_G8YcceNBM"}},{"cell_type":"code","source":["## 간단한게 큰 틀로 접근\n","# 1) 주어진 입력 사항에 대한 세팅\n","\n","n = 5\n","plans = [\"R\", \"R\", \"R\",\"U\",\"D\",\"D\"]\n","\n","# 2) 내가 어디에 있는지 좌표값을 다루는 변수 설정 : (x,y). x / y 본인 스타일\n","x, y = 1,1\n","# pos = (1,1)\n","# ---> 문제 조건상 1,1 에서 시작하라고 했으니... 그냥 초기값 !!\n","\n","#3) 이동에 대한 규칙화 !!! ---? dict/ list 여러 스타일로 코드화 !!(dict)\n","\n","move_dict ={\n","    \"L\" : [0, -1],\n","    \"R\" : [0, 1],\n","    \"U\" : [-1,0],\n","    \"D\" : [1,0],\n","}\n","# ---- 문제 상황\n","\n","# 4) 본격적인 문제 해결 단계 코드\n","# 이 문제의 가장 큰 틀 : 입력으로 받은 plans 을 다돌리며ㅛㄴ서!!! for\n","#       --> 그 해당하는 plan으로 좌표를 이용하기!!!!\n","#       --> but) 인바운드 아웃바운드인지 체크 !!! if/ 부등식\n","#       ---> 이동하자 코드 표현 : 좌표값 x,y의 갱신 !!!\n","\n","\n","\n","# plans = [\"R\", \"R\", \"R\", \"U\", \"D\",\"D\"]\n","for plan in plans : # 지시사항들을 하나씩 돌리자 !! 하나씩 해보자\n","# 지금 위치에서 지시사항대로 움직이면 어디로 갈지 체크\n","# 주의  !! : 나의 위치를 이동하면 안됨 범위(in.out)\n","\n","    next_x = x + move_dict[plan][0]\n","    next_y = y + move_dict[plan][1]\n","    # 잠시 !! 이동 가능한지 체크 !!! 찐으로 이동이 가능한지 체크\n","\n","    if next_x < 1 or next_x > n or next_y < 1 or next_y > n :\n","        # 아웃바운드에 대한 조건!!\n","        continue # => 이번 지시 사항에서는 할 일이 없음 !!! 다음 지시 사항 받으면 됨\n","        # 다음 지시사랑을 받기 위한 continue 로 실행을 하면 됨\n","    else: # 인바운드 !!\n","    # 할 일은 : 진짜 찐으로 이동을 하면 됨 ----> 좌표 x,y의 갱식\n","        x,y = next_x , next_y\n","\n","print(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZjrFabtbk9t","executionInfo":{"status":"ok","timestamp":1711351192873,"user_tz":-540,"elapsed":4,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"49ec1284-9631-48be-ef2e-7e96bdbd78cc"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["3 4\n"]}]},{"cell_type":"code","source":["## 간단한게 큰 틀로 접근\n","# 1) 주어진 입력 사항에 대한 세팅\n","\n","n = 5\n","plans = [\"R\", \"R\", \"R\",\"U\",\"D\",\"D\"]\n","\n","# 2) 내가 어디에 있는지 좌표값을 다루는 변수 설정 : (x,y). x / y 본인 스타일\n","x, y = 1,1\n","# pos = (1,1)\n","# ---> 문제 조건상 1,1 에서 시작하라고 했으니... 그냥 초기값 !!\n","\n","#3) 이동에 대한 규칙화 !!! ---? dict/ list 여러 스타일로 코드화 !!(dict)\n","\n","move_dict ={\n","    \"L\" : [0, -1],\n","    \"R\" : [0, 1],\n","    \"U\" : [-1,0],\n","    \"D\" : [1,0],\n","}\n","\n","for plan in plans :\n","\n","    next_x,next_y = x + move_dict[plan][0], y + move_dict[plan][1]\n","    #next_x = x + move_dict[plan][0]\n","    #next_y = y + move_dict[plan][1]\n","\n","\n","    if next_x < 1 or next_x > n or next_y < 1 or next_y > n :\n","\n","        continue\n","    else:\n","        x,y = next_x , next_y\n","\n","print(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d_k9vL6DeAp5","executionInfo":{"status":"ok","timestamp":1711351291583,"user_tz":-540,"elapsed":299,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"e756c91e-08ce-4929-9059-c658cc304c1b"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["3 4\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"-730tVuBfFsy","executionInfo":{"status":"ok","timestamp":1711351360198,"user_tz":-540,"elapsed":333,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# 다른 방식 : 이동에 대한 것을 리스트로 표현\n","# 순서대로 인덱스\n","# 0 1 2 3"],"metadata":{"id":"pcOTvdcgfXOB","executionInfo":{"status":"ok","timestamp":1711351372907,"user_tz":-540,"elapsed":3,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["move_types = [\"L\", \"R\",\"U\",\"D\"]\n","dx         = [0, 0, -1, 1]\n","dy         = [-1, 1, 0, 0]\n"],"metadata":{"id":"p94HtnGufZgk","executionInfo":{"status":"ok","timestamp":1711351508783,"user_tz":-540,"elapsed":3,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["idx = 1\n","print(move_types[idx])\n","print(dx[idx])\n","print(dy[idx])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sfkCbW6Mf6sF","executionInfo":{"status":"ok","timestamp":1711351546593,"user_tz":-540,"elapsed":3,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"b60b02b3-50bd-40dd-fba5-89c8a7ca771f"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["R\n","0\n","1\n"]}]},{"cell_type":"code","source":["# (3,4)에 있는 좌표를 L 이동을 하면...\n","idx = 0 # 내가 정의L은 0번쨰 했기에...\n","3 + dx[idx], 4 + dy[idx]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zwa1MEOYgECY","executionInfo":{"status":"ok","timestamp":1711351620297,"user_tz":-540,"elapsed":4,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"4762086d-4f4a-4f85-9063-964ccaf6554e"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 3)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# 간단하게 전체를 구현\n","# 1. 주어진 조건\n","\n","n = 5\n","plans = [\"R\", \"R\", \"R\",\"U\",\"D\",\"D\"]\n","\n","# 2. 움직임에 대한 좌표 변수 생성 & 초기값은 처음에 1,1에서 움직여서 초기값\n","x, y = 1,1\n","\n","# 3. LRUD에 대한 이동을 리스트로 ..\n","move_types = [\"L\", \"R\",\"U\",\"D\"] # 몇번쨰 인덱스에 대한 이동인지 파악\n","dx         = [0, 0, -1, 1]\n","dy         = [-1, 1, 0, 0]\n","\n","# 4. 지시사항대로 돌리면서.... 좌표이동 if in/out --> in 이면 갱신!!(이동)\n","\n","for plan in plans:\n","    # 지시사항이 몇 번쨰 위치의 지시사항인지 체크\n","    # ---> 리스트의 잡다한 기능 중 index 매서드를 알면 쓰면 되고 !!!\n","    # 여기서는 그런거 모르고 하겠음\n","    num_type = len(move_types)\n","    for i in range(num_type): # [0,1,2,3] -> 몇 번쨰에 지시사항이 있나\n","        if plan === move_types[i]:\n","            next_x = x + dx[i]\n","            next_y = y + dy[i]\n","     # ---> 코데에서 잡다한 사항들을 알면 좋음!!!\n","\n","     # in이냐 아웃이냐를 따지면 된다.\n","    if next_x < 1 or next_x > n or next_y < 1 or next_y > n:\n","        continue\n","\n","    else:\n","        x = next_x\n","        y = next_y\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":109},"id":"EpOofrFAgV6S","executionInfo":{"status":"error","timestamp":1711352152529,"user_tz":-540,"elapsed":7,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"3af2e08b-aa25-431d-aad1-b7b8ff79b8fa"},"execution_count":17,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-17-1f8581de866d>, line 23)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-17-1f8581de866d>\"\u001b[0;36m, line \u001b[0;32m23\u001b[0m\n\u001b[0;31m    if plan === move_types[i]:\u001b[0m\n\u001b[0m              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","source":["# 인덱스 찾기\n","[\"L\", \"R\",\"U\",\"D\"].index(\"R\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPwW_tClhACv","executionInfo":{"status":"ok","timestamp":1711352221394,"user_tz":-540,"elapsed":3,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"b1045282-0015-4d30-fdae-4ddf5e823ee9"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["### 점검할 사항\n","\n","# 1.  내가 주어진 상황을 어떤 자료형으로 할지에 따라서 코드적인 부분이 좀 달라짐\n","# ----> 효율적인 부분, 다른 사람의 코드, 노하우(본인 스타일 정립)\n","# 2. 좌표 이동에 대한 설정 부분 dict, 리스트로 할 것이냐에 대한 각기 방향!!!\n","# 3. 평면상에 이동에 대한 여부는 좌표를 쓰는 용이할 수 있겠구나 !!!\n","# 4.  ++ 파이썬의 리스트의 잡다한 기능(메서드) .index 것도 있구나!!!"],"metadata":{"id":"aTlAXFCihHeZ","executionInfo":{"status":"ok","timestamp":1711352295268,"user_tz":-540,"elapsed":3,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"sutDfL9Oi60z","executionInfo":{"status":"ok","timestamp":1711352303821,"user_tz":-540,"elapsed":2,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# 입력 부분까지 수정!!!\n","n = int(input(\"지도크기 입력하세요 max=100\"))\n","plans = input(\"지시사항을 공백으로 입력하세요 R R U\").split(\" \")\n","\n","# 2. 움직임에 대한 좌표 변수 생성 & 초기값은 처음에 1,1에서 움직여서 초기값\n","x, y = 1,1\n","\n","move_dict ={\n","    \"L\" : [0, -1],\n","    \"R\" : [0, 1],\n","    \"U\" : [-1,0],\n","    \"D\" : [1,0],\n","}\n","\n","for plan in plans :\n","\n","    next_x,next_y = x + move_dict[plan][0], y + move_dict[plan][1]\n","    #next_x = x + move_dict[plan][0]\n","    #next_y = y + move_dict[plan][1]\n","\n","\n","    if next_x < 1 or next_x > n or next_y < 1 or next_y > n :\n","\n","        continue\n","    else:\n","        x,y = next_x , next_y\n","\n","print(x,y)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":234},"id":"pSTblWOCi9sN","executionInfo":{"status":"error","timestamp":1711352461101,"user_tz":-540,"elapsed":7292,"user":{"displayName":"ㅓㅏ","userId":"17927464022790906287"}},"outputId":"6c85cc9e-49b8-43b0-cf8e-137ef469f23c"},"execution_count":21,"outputs":[{"name":"stdout","output_type":"stream","text":["지도크기 입력하세요 max=100 3 , 3\n"]},{"output_type":"error","ename":"ValueError","evalue":"invalid literal for int() with base 10: ' 3 , 3'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-8231a20373aa>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 입력 부분까지 수정!!!\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"지도크기 입력하세요 max=100\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplans\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"지시사항을 공백으로 입력하세요 R R U\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\" \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# 2. 움직임에 대한 좌표 변수 생성 & 초기값은 처음에 1,1에서 움직여서 초기값\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: ' 3 , 3'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"N6_Oys5GjeQm"},"execution_count":null,"outputs":[]}]}